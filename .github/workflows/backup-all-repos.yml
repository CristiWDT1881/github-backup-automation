name: Backup Toate Repository-urile

on:
  schedule:
    - cron: '0 2 * * *'  # Zilnic la 04:00 dimineața (ora României)
  workflow_dispatch:     # Poți rula manual
  push:
    branches: [ main ]

jobs:
  backup-all:
    runs-on: ubuntu-latest
    
    steps:
    - name: Configurare Git
      run: |
        git config --global user.name "GitHub Backup Bot"
        git config --global user.email "cristianiftodexyz@gmail.com"
    
    - name: Obține toate repository-urile tale
      id: get_repos
      run: |
        echo "Obțin lista repository-urilor..."
        REPOS=$(curl -s "https://api.github.com/users/CristiWDT1881/repos?per_page=100&type=all" | jq -r '.[].name')
        
        echo "Repository-uri găsite:"
        echo "$REPOS"
        
        # Salvează lista
        echo "repos<<EOF" >> $GITHUB_OUTPUT
        echo "$REPOS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Verifică modificări și creează arhive
      id: create_backups
      run: |
        mkdir -p backups
        CHANGED_REPOS=""
        TOTAL_CHANGES=0
        DATE=$(date +%Y%m%d_%H%M%S)
        
        for repo in ${{ steps.get_repos.outputs.repos }}; do
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📦 Procesez: $repo"
          
          # Clonează repository-ul
          git clone --depth=50 "https://github.com/CristiWDT1881/$repo.git" "$repo" 2>/dev/null || {
            echo "⚠️  Nu pot clona $repo (posibil privat sau gol)"
            continue
          }
          
          cd "$repo"
          
          # Verifică modificările din ultimele 24 ore
          COMMITS=$(git log --since="24 hours ago" --oneline 2>/dev/null | wc -l)
          
          if [ $COMMITS -gt 0 ]; then
            echo "✓ $repo: $COMMITS modificări recente"
            CHANGED_REPOS="${CHANGED_REPOS}📁 **${repo}**: ${COMMITS} commit(uri)\n"
            TOTAL_CHANGES=$((TOTAL_CHANGES + 1))
            
            cd ..
            
            # Creează arhivă
            echo "📦 Creez arhivă pentru $repo..."
            tar -czf "backups/${repo}_${DATE}.tar.gz" \
              --exclude='.git' \
              --exclude='node_modules' \
              --exclude='*.pyc' \
              --exclude='__pycache__' \
              --exclude='.env' \
              "$repo"
            
            SIZE=$(du -h "backups/${repo}_${DATE}.tar.gz" | cut -f1)
            echo "✓ Arhivă creată: ${SIZE}"
          else
            echo "ℹ️  $repo: fără modificări"
            cd ..
          fi
          
          # Curăță
          rm -rf "$repo"
        done
        
        echo "changed_repos<<EOF" >> $GITHUB_OUTPUT
        echo -e "$CHANGED_REPOS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "total_changes=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
        echo "date_readable=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        echo "date_tag=$DATE" >> $GITHUB_OUTPUT
        
        # Verifică dacă sunt arhive
        if [ $TOTAL_CHANGES -gt 0 ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          
          # Creează o arhivă unică cu toate
          cd backups
          tar -czf "../all_backups_${DATE}.tar.gz" *.tar.gz
          cd ..
          
          echo "FINAL_ARCHIVE=all_backups_${DATE}.tar.gz" >> $GITHUB_ENV
          
          ls -lh "all_backups_${DATE}.tar.gz"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️  Nu sunt modificări în ultimele 24 ore"
        fi
    
    - name: Creează Release cu arhivele
      if: steps.create_backups.outputs.has_changes == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: backup-${{ steps.create_backups.outputs.date_tag }}
        name: "🗄️ Backup ${{ steps.create_backups.outputs.date_readable }}"
        body: |
          ## 📦 Backup Automat - Toate Repository-urile
          
          **Data backup:** ${{ steps.create_backups.outputs.date_readable }}  
          **Repository-uri cu modificări:** ${{ steps.create_backups.outputs.total_changes }}
          
          ### 📋 Detalii modificări:
          ${{ steps.create_backups.outputs.changed_repos }}
          
          ### 📥 Descărcare
          Descarcă arhiva unică de mai jos care conține toate backup-urile.
          
          ### 📧 Notificări configurate pentru:
          - cristianiftodexyz@gmail.com
          - tehnicdti@protonmail.com
          
          ---
          *Backup creat automat de GitHub Actions*  
          *Repository: github-backup-automation*
        files: ${{ env.FINAL_ARCHIVE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Log final
      run: |
        if [ "${{ steps.create_backups.outputs.has_changes }}" == "true" ]; then
          echo "✅ Backup finalizat cu succes!"
          echo "📊 Total repository-uri backup-uite: ${{ steps.create_backups.outputs.total_changes }}"
        else
          echo "ℹ️  Nu sunt modificări - nu s-a creat backup"
        fi
